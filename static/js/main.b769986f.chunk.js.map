{"version":3,"sources":["context.js","components/layout/CardHeader.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/PageNotFoud.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","deleteContact","addContact","updateContact","notify","show","Object","objectSpread","contacts","filter","contact","id","payload","contacrAlreadyExists","concat","toConsumableArray","map","ct","exist","forEach","name","phone","email","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","CardHeader","onclick","isBodyShown","firstClass","oppositeClass","color","title","style","cursor","onClick","className","float","defaultProps","Contact","ShowContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","layout_CardHeader","v4","Fragment","Link","to","bind","Contacts","showContacts","onClickShowContacts","contacts_Contact","Header","branding","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","isFormShown","errors","onFormChanged","defineProperty","target","onClickShowForm","onSubmitContactForm","_this$state","newContact","preventDefault","validateInputs","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","About","match","params","PageNotFoud","EditContact","updatedContact","put","App","context_Provider","BrowserRouter","basename","process","notify_default","options","zIndex","top","layout_Header","Switch","Route","exact","path","component","PageNotFound","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b769986f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { notify } from 'react-notify-toast';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return deleteContact(state, action);\r\n\r\n    case 'ADD_CONTACT':\r\n      return addContact(state, action);\r\n    case 'UPDATE_CONTACT':\r\n      return updateContact(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst deleteContact = (state, action) => {\r\n  notify.show('Contact Deleted ', 'success');\r\n  return {\r\n    ...state,\r\n    contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n  };\r\n};\r\nconst addContact = (state, action) => {\r\n  if (contacrAlreadyExists(state, action.payload)) {\r\n    notify.show('Contact already exists ! ', 'warning');\r\n  } else {\r\n    notify.show('your new contact has been added successfully !', 'success');\r\n    const contact = action.payload;\r\n    return {\r\n      ...state,\r\n      contacts: [action.payload, ...state.contacts]\r\n    };\r\n  }\r\n  return state;\r\n};\r\nconst updateContact = (state, action) => {\r\n  const contact = action.payload;\r\n  notify.show('your new contact has been update successfully !', 'success');\r\n  return {\r\n    ...state,\r\n    contacts: state.contacts.map(ct =>\r\n      ct.id === contact.id ? (ct = contact) : ct\r\n    )\r\n  };\r\n};\r\nconst contacrAlreadyExists = (state, contact) => {\r\n  let exist;\r\n  state.contacts.forEach(ct => {\r\n    ct.name === contact.name &&\r\n    ct.phone === contact.phone &&\r\n    ct.email === contact.email\r\n      ? (exist = true)\r\n      : (exist = false);\r\n  });\r\n  return exist;\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst CardHeader = props => {\r\n  const {\r\n    onclick,\r\n    isBodyShown,\r\n    firstClass,\r\n    oppositeClass,\r\n    color,\r\n    title\r\n  } = props;\r\n  return (\r\n    <div\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={onclick}\r\n      className={'card-header bg-transparent border-' + color}\r\n    >\r\n      <span style={{ cursor: 'pointer' }} onClick={onclick}>\r\n        {title}\r\n      </span>\r\n      <i\r\n        onClick={onclick}\r\n        className={!isBodyShown ? 'fas ' + firstClass : 'fas ' + oppositeClass}\r\n        style={{ float: 'right', cursor: 'pointer' }}\r\n      />{' '}\r\n    </div>\r\n  );\r\n};\r\n\r\nCardHeader.propTypes = {\r\n  isBodyShown: PropTypes.bool.isRequired,\r\n  firstClass: PropTypes.string.isRequired,\r\n  oppositeClass: PropTypes.string.isRequired,\r\n  onclick: PropTypes.func.isRequired\r\n};\r\nCardHeader.defaultProps = {\r\n  isBodyShown: false,\r\n  firstClass: 'fa-plus',\r\n  oppositeClass: 'fa-minus',\r\n  color: 'success'\r\n};\r\nexport default CardHeader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport CardHeader from '../layout/CardHeader';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nclass Contact extends Component {\r\n  state = {\r\n    ShowContactInfo: false\r\n  };\r\n  onShowClick = e => {\r\n    this.setState({ ShowContactInfo: !this.state.ShowContactInfo });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { ShowContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\" col-lg-4 col-sm-6 col-md-4 col-12\">\r\n              <div className=\"card border-info mb-3\">\r\n                <CardHeader\r\n                  isBodyShown={ShowContactInfo}\r\n                  onclick={this.onShowClick}\r\n                  firstClass=\"fa-chevron-down\"\r\n                  oppositeClass=\"fa-chevron-up\"\r\n                  title={[<strong>{name}</strong>]}\r\n                  color=\"info\"\r\n                  key={v4()}\r\n                />\r\n                {ShowContactInfo ? (\r\n                  <React.Fragment>\r\n                    <div className=\"card-body text-success\">\r\n                      <p className=\"card-text\">\r\n                        <ul className=\"list-group\">\r\n                          <li className=\"list-group-item\">Email : {email}</li>\r\n                          <li className=\"list-group-item\">Phone : {phone}</li>\r\n                        </ul>\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"card-footer bg-transparent border-success\">\r\n                      <Link\r\n                        to={`contact/edit/${id}`}\r\n                        className=\"btn btn-warning\"\r\n                      >\r\n                        <i\r\n                          className=\"fas fa-edit fa-xs\"\r\n                          style={{ cursor: 'pointer' }}\r\n                        />{' '}\r\n                        Edit\r\n                      </Link>\r\n                      <button\r\n                        style={{ float: 'right' }}\r\n                        className=\"btn btn-danger pull-right\"\r\n                        onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                      >\r\n                        <i\r\n                          className=\"fas fa-times fa-xs\"\r\n                          style={{ cursor: 'pointer' }}\r\n                        />{' '}\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </React.Fragment>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\nimport CardHeader from '../layout/CardHeader';\r\nimport { v4 } from 'uuid';\r\nclass Contacts extends Component {\r\n  state = {\r\n    showContacts: true\r\n  };\r\n  onClickShowContacts = e => {\r\n    this.setState({\r\n      showContacts: !this.state.showContacts\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          const { showContacts } = this.state;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span> List\r\n              </h1>\r\n              <div className=\"card bg-transparent border-warning mb-3\">\r\n                <CardHeader\r\n                  isBodyShown={showContacts}\r\n                  onclick={this.onClickShowContacts}\r\n                  color=\"warning\"\r\n                  title=\"Contacts\"\r\n                  key={v4()}\r\n                />\r\n\r\n                {showContacts ? (\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      {contacts.length > 0 ? (\r\n                        contacts.map(contact => (\r\n                          <Contact key={contact.id} contact={contact} />\r\n                        ))\r\n                      ) : (\r\n                        <div className=\"alter alert-info\">\r\n                          there is no contacts yet\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Contact Manager'\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = props => {\r\n  const { label, name, value, placeholder, type, onChange, error } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport CardHeader from '../layout/CardHeader';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nclass AddContact extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    isFormShown: true,\r\n    errors: {}\r\n  };\r\n  onFormChanged = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onClickShowForm = e => {\r\n    this.setState({\r\n      isFormShown: !this.state.isFormShown\r\n    });\r\n  };\r\n  onSubmitContactForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    if (this.validateInputs()) {\r\n      const { name, email, phone } = this.state;\r\n      const newContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      };\r\n      const res = await axios.post(\r\n        'https://jsonplaceholder.typicode.com/users',\r\n        newContact\r\n      );\r\n      dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n      });\r\n      this.props.history.push('/');\r\n    }\r\n  };\r\n  validateInputs() {\r\n    if (this.state.name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, isFormShown, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card  bg-transparent border-success mb-3\">\r\n              <CardHeader\r\n                isBodyShown={isFormShown}\r\n                onclick={this.onClickShowForm}\r\n                title=\"Add Contact \"\r\n                key={v4()}\r\n              />\r\n              {isFormShown ? (\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    onSubmit={this.onSubmitContactForm.bind(this, dispatch)}\r\n                  >\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      onChange={this.onFormChanged}\r\n                      value={name}\r\n                      placeholder=\"Enter Name ...\"\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={this.onFormChanged}\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email ...\"\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      onChange={this.onFormChanged}\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone ...\"\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-block btn-danger\"\r\n                      value=\"Add Contact\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nconst About = props => {\r\n  return (\r\n    <div>\r\n      <h3>{props.match.params.id}</h3>\r\n      <h4 className=\"display-4 text-danger\">About Contact Manager</h4>\r\n      <p className=\"lead\">Simple App to manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 0.0.12</p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"diplay-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, That page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport CardHeader from '../layout/CardHeader';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nclass EditContact extends Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    isFormShown: true,\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n    this.setState({\r\n      id,\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n  onFormChanged = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onClickShowForm = e => {\r\n    this.setState({\r\n      isFormShown: !this.state.isFormShown\r\n    });\r\n  };\r\n  onSubmitContactForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    if (this.validateInputs()) {\r\n      const { id, name, email, phone } = this.state;\r\n      const updatedContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      };\r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updatedContact\r\n      );\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n      });\r\n      this.props.history.push('/');\r\n    }\r\n  };\r\n  validateInputs() {\r\n    if (this.state.name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, isFormShown, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card  bg-transparent border-success mb-3\">\r\n              <CardHeader\r\n                isBodyShown={isFormShown}\r\n                onclick={this.onClickShowForm}\r\n                title=\"Edit Contact \"\r\n                key={v4()}\r\n              />\r\n              {isFormShown ? (\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    onSubmit={this.onSubmitContactForm.bind(this, dispatch)}\r\n                  >\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      onChange={this.onFormChanged}\r\n                      value={name}\r\n                      placeholder=\"Enter Name ...\"\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={this.onFormChanged}\r\n                      value={email}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email ...\"\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      onChange={this.onFormChanged}\r\n                      value={phone}\r\n                      placeholder=\"Enter Phone ...\"\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-block btn-danger\"\r\n                      value=\"Update Contact\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\nimport Notifications from 'react-notify-toast';\r\nimport Contacts from './components/contacts/Contacts';\r\nimport Header from './components/layout/Header';\r\nimport { Provider } from './context';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport About from './components/pages/About';\r\nimport PageNotFound from './components/pages/PageNotFoud';\r\nimport EditContact from './components/contacts/EditContact';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n            <Notifications options={{ zIndex: 200, top: '50px' }} />\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route component={PageNotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}